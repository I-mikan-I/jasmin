require import AllCore IntDiv CoreMap List Distr.
from Jasmin require import JModel_x86.
import SLH64.

from Jasmin require import JLeakage.
require import Array4 Array5 Array8 Array64.
require import WArray32 WArray40 WArray64.

abbrev __38 = W64.of_int 38.


module M = {
  var leakages : leakages_t
  
  proc reduce (z:W64.t Array8.t) : W64.t Array4.t = {
    var aux_1: bool;
    var aux_0: W64.t;
    var aux: W64.t;
    
    var xa:W64.t Array4.t;
    var rax:W64.t;
    var rdx:W64.t;
    var cf:bool;
    var z8:W64.t;
    var r0:W64.t;
    var  _0:bool;
    var  _1:bool;
    var  _2:bool;
    var  _3:bool;
    var  _4:bool;
    xa <- witness;
    leakages <- LeakAddr([4]) :: leakages;
    aux_0 <- z.[4];
    rax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 rax __38;
    rdx <- aux_0;
    rax <- aux;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- rax;
    leakages <- LeakAddr([0]) :: leakages;
    xa.[0] <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- rdx;
    leakages <- LeakAddr([1]) :: leakages;
    xa.[1] <- aux_0;
    leakages <- LeakAddr([5]) :: leakages;
    aux_0 <- z.[5];
    rax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 rax __38;
    rdx <- aux_0;
    rax <- aux;
    leakages <- LeakAddr([1]) :: leakages;
    (aux_1, aux_0) <- adc_64 xa.[1] rax false;
    cf <- aux_1;
    leakages <- LeakAddr([1]) :: leakages;
    xa.[1] <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- MOV_64 (W64.of_int 0);
    leakages <- LeakAddr([2]) :: leakages;
    xa.[2] <- aux_0;
    leakages <- LeakAddr([6]) :: leakages;
    aux_0 <- z.[6];
    rax <- aux_0;
    leakages <- LeakAddr([2]) :: leakages;
    (aux_1, aux_0) <- adc_64 xa.[2] rdx cf;
     _0 <- aux_1;
    leakages <- LeakAddr([2]) :: leakages;
    xa.[2] <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 rax __38;
    rdx <- aux_0;
    rax <- aux;
    leakages <- LeakAddr([2]) :: leakages;
    (aux_1, aux_0) <- adc_64 xa.[2] rax false;
    cf <- aux_1;
    leakages <- LeakAddr([2]) :: leakages;
    xa.[2] <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- MOV_64 (W64.of_int 0);
    leakages <- LeakAddr([3]) :: leakages;
    xa.[3] <- aux_0;
    leakages <- LeakAddr([7]) :: leakages;
    aux_0 <- z.[7];
    rax <- aux_0;
    leakages <- LeakAddr([3]) :: leakages;
    (aux_1, aux_0) <- adc_64 xa.[3] rdx cf;
     _1 <- aux_1;
    leakages <- LeakAddr([3]) :: leakages;
    xa.[3] <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 rax __38;
    rdx <- aux_0;
    rax <- aux;
    leakages <- LeakAddr([3]) :: leakages;
    (aux_1, aux_0) <- adc_64 xa.[3] rax false;
    cf <- aux_1;
    leakages <- LeakAddr([3]) :: leakages;
    xa.[3] <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- MOV_64 (W64.of_int 0);
    z8 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 z8 rdx cf;
     _2 <- aux_1;
    z8 <- aux_0;
    leakages <- LeakAddr([0; 0]) :: leakages;
    (aux_1, aux_0) <- adc_64 xa.[0] z.[0] false;
    cf <- aux_1;
    leakages <- LeakAddr([0]) :: leakages;
    xa.[0] <- aux_0;
    leakages <- LeakAddr([1; 1]) :: leakages;
    (aux_1, aux_0) <- adc_64 xa.[1] z.[1] cf;
    cf <- aux_1;
    leakages <- LeakAddr([1]) :: leakages;
    xa.[1] <- aux_0;
    leakages <- LeakAddr([2; 2]) :: leakages;
    (aux_1, aux_0) <- adc_64 xa.[2] z.[2] cf;
    cf <- aux_1;
    leakages <- LeakAddr([2]) :: leakages;
    xa.[2] <- aux_0;
    leakages <- LeakAddr([3; 3]) :: leakages;
    (aux_1, aux_0) <- adc_64 xa.[3] z.[3] cf;
    cf <- aux_1;
    leakages <- LeakAddr([3]) :: leakages;
    xa.[3] <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 z8 (W64.of_int 0) cf;
     _3 <- aux_1;
    z8 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (z8 * (W64.of_int 38));
    z8 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- MOV_64 (W64.of_int 0);
    r0 <- aux_0;
    leakages <- LeakAddr([0]) :: leakages;
    (aux_1, aux_0) <- adc_64 xa.[0] z8 false;
    cf <- aux_1;
    leakages <- LeakAddr([0]) :: leakages;
    xa.[0] <- aux_0;
    leakages <- LeakAddr([1]) :: leakages;
    (aux_1, aux_0) <- adc_64 xa.[1] (W64.of_int 0) cf;
    cf <- aux_1;
    leakages <- LeakAddr([1]) :: leakages;
    xa.[1] <- aux_0;
    leakages <- LeakAddr([2]) :: leakages;
    (aux_1, aux_0) <- adc_64 xa.[2] (W64.of_int 0) cf;
    cf <- aux_1;
    leakages <- LeakAddr([2]) :: leakages;
    xa.[2] <- aux_0;
    leakages <- LeakAddr([3]) :: leakages;
    (aux_1, aux_0) <- adc_64 xa.[3] (W64.of_int 0) cf;
    cf <- aux_1;
    leakages <- LeakAddr([3]) :: leakages;
    xa.[3] <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r0 (W64.of_int 0) cf;
     _4 <- aux_1;
    r0 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (r0 * (W64.of_int 38));
    r0 <- aux_0;
    leakages <- LeakAddr([0]) :: leakages;
    aux_0 <- (xa.[0] + r0);
    leakages <- LeakAddr([0]) :: leakages;
    xa.[0] <- aux_0;
    return (xa);
  }
  
  proc iterated_square (xa:W64.t Array4.t, n:W64.t) : W64.t Array4.t = {
    var aux_3: bool;
    var aux_2: W64.t;
    var aux_1: W64.t;
    var aux_0: W8.t Array64.t;
    var aux_4: W64.t Array4.t;
    var aux: W64.t Array8.t;
    
    var cf:bool;
    var z:W64.t Array8.t;
    var rax:W64.t;
    var rdx:W64.t;
    var t:W64.t Array5.t;
    var t2s:W64.t;
    var  _0:bool;
    var  _1:bool;
    var  _2:bool;
    var  _3:bool;
    var  _4:bool;
    t <- witness;
    z <- witness;
    leakages <- LeakAddr([]) :: leakages;
    z <- witness;
    leakages <- LeakAddr([1]) :: leakages;
    aux_2 <- xa.[1];
    rax <- aux_2;
    leakages <- LeakAddr([0]) :: leakages;
    (aux_2, aux_1) <- mulu_64 rax xa.[0];
    rdx <- aux_2;
    rax <- aux_1;
    leakages <- LeakAddr([]) :: leakages;
    aux_2 <- rax;
    leakages <- LeakAddr([1]) :: leakages;
    z.[1] <- aux_2;
    leakages <- LeakAddr([]) :: leakages;
    aux_2 <- rdx;
    leakages <- LeakAddr([2]) :: leakages;
    z.[2] <- aux_2;
    leakages <- LeakAddr([2]) :: leakages;
    aux_2 <- xa.[2];
    rax <- aux_2;
    leakages <- LeakAddr([1]) :: leakages;
    (aux_2, aux_1) <- mulu_64 rax xa.[1];
    rdx <- aux_2;
    rax <- aux_1;
    leakages <- LeakAddr([]) :: leakages;
    aux_2 <- rax;
    leakages <- LeakAddr([3]) :: leakages;
    z.[3] <- aux_2;
    leakages <- LeakAddr([]) :: leakages;
    aux_2 <- rdx;
    leakages <- LeakAddr([4]) :: leakages;
    z.[4] <- aux_2;
    leakages <- LeakAddr([3]) :: leakages;
    aux_2 <- xa.[3];
    rax <- aux_2;
    leakages <- LeakAddr([2]) :: leakages;
    (aux_2, aux_1) <- mulu_64 rax xa.[2];
    rdx <- aux_2;
    rax <- aux_1;
    leakages <- LeakAddr([]) :: leakages;
    aux_2 <- rax;
    leakages <- LeakAddr([5]) :: leakages;
    z.[5] <- aux_2;
    leakages <- LeakAddr([]) :: leakages;
    aux_2 <- rdx;
    leakages <- LeakAddr([6]) :: leakages;
    z.[6] <- aux_2;
    leakages <- LeakAddr([]) :: leakages;
    aux_2 <- MOV_64 (W64.of_int 0);
    leakages <- LeakAddr([7]) :: leakages;
    z.[7] <- aux_2;
    leakages <- LeakAddr([2]) :: leakages;
    aux_2 <- xa.[2];
    rax <- aux_2;
    leakages <- LeakAddr([0]) :: leakages;
    (aux_2, aux_1) <- mulu_64 rax xa.[0];
    rdx <- aux_2;
    rax <- aux_1;
    leakages <- LeakAddr([2]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[2] rax false;
    cf <- aux_3;
    leakages <- LeakAddr([2]) :: leakages;
    z.[2] <- aux_2;
    leakages <- LeakAddr([3]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[3] rdx cf;
    cf <- aux_3;
    leakages <- LeakAddr([3]) :: leakages;
    z.[3] <- aux_2;
    leakages <- LeakAddr([4]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[4] (W64.of_int 0) cf;
     _0 <- aux_3;
    leakages <- LeakAddr([4]) :: leakages;
    z.[4] <- aux_2;
    leakages <- LeakAddr([3]) :: leakages;
    aux_2 <- xa.[3];
    rax <- aux_2;
    leakages <- LeakAddr([1]) :: leakages;
    (aux_2, aux_1) <- mulu_64 rax xa.[1];
    rdx <- aux_2;
    rax <- aux_1;
    leakages <- LeakAddr([4]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[4] rax false;
    cf <- aux_3;
    leakages <- LeakAddr([4]) :: leakages;
    z.[4] <- aux_2;
    leakages <- LeakAddr([5]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[5] rdx cf;
    cf <- aux_3;
    leakages <- LeakAddr([5]) :: leakages;
    z.[5] <- aux_2;
    leakages <- LeakAddr([6]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[6] (W64.of_int 0) cf;
    cf <- aux_3;
    leakages <- LeakAddr([6]) :: leakages;
    z.[6] <- aux_2;
    leakages <- LeakAddr([3]) :: leakages;
    aux_2 <- xa.[3];
    rax <- aux_2;
    leakages <- LeakAddr([0]) :: leakages;
    (aux_2, aux_1) <- mulu_64 rax xa.[0];
    rdx <- aux_2;
    rax <- aux_1;
    leakages <- LeakAddr([3]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[3] rax false;
    cf <- aux_3;
    leakages <- LeakAddr([3]) :: leakages;
    z.[3] <- aux_2;
    leakages <- LeakAddr([4]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[4] rdx cf;
    cf <- aux_3;
    leakages <- LeakAddr([4]) :: leakages;
    z.[4] <- aux_2;
    leakages <- LeakAddr([5]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[5] (W64.of_int 0) cf;
    cf <- aux_3;
    leakages <- LeakAddr([5]) :: leakages;
    z.[5] <- aux_2;
    leakages <- LeakAddr([6]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[6] (W64.of_int 0) cf;
    cf <- aux_3;
    leakages <- LeakAddr([6]) :: leakages;
    z.[6] <- aux_2;
    leakages <- LeakAddr([7]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[7] (W64.of_int 0) cf;
     _1 <- aux_3;
    leakages <- LeakAddr([7]) :: leakages;
    z.[7] <- aux_2;
    leakages <- LeakAddr([1; 1]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[1] z.[1] false;
    cf <- aux_3;
    leakages <- LeakAddr([1]) :: leakages;
    z.[1] <- aux_2;
    leakages <- LeakAddr([2; 2]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[2] z.[2] cf;
    cf <- aux_3;
    leakages <- LeakAddr([2]) :: leakages;
    z.[2] <- aux_2;
    leakages <- LeakAddr([3; 3]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[3] z.[3] cf;
    cf <- aux_3;
    leakages <- LeakAddr([3]) :: leakages;
    z.[3] <- aux_2;
    leakages <- LeakAddr([4; 4]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[4] z.[4] cf;
    cf <- aux_3;
    leakages <- LeakAddr([4]) :: leakages;
    z.[4] <- aux_2;
    leakages <- LeakAddr([5; 5]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[5] z.[5] cf;
    cf <- aux_3;
    leakages <- LeakAddr([5]) :: leakages;
    z.[5] <- aux_2;
    leakages <- LeakAddr([6; 6]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[6] z.[6] cf;
    cf <- aux_3;
    leakages <- LeakAddr([6]) :: leakages;
    z.[6] <- aux_2;
    leakages <- LeakAddr([7; 7]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[7] z.[7] cf;
     _2 <- aux_3;
    leakages <- LeakAddr([7]) :: leakages;
    z.[7] <- aux_2;
    leakages <- LeakAddr([0]) :: leakages;
    aux_2 <- xa.[0];
    rax <- aux_2;
    leakages <- LeakAddr([0]) :: leakages;
    (aux_2, aux_1) <- mulu_64 rax xa.[0];
    rdx <- aux_2;
    rax <- aux_1;
    leakages <- LeakAddr([]) :: leakages;
    aux_2 <- rax;
    leakages <- LeakAddr([0]) :: leakages;
    z.[0] <- aux_2;
    leakages <- LeakAddr([]) :: leakages;
    aux_2 <- rdx;
    leakages <- LeakAddr([0]) :: leakages;
    t.[0] <- aux_2;
    leakages <- LeakAddr([1]) :: leakages;
    aux_2 <- xa.[1];
    rax <- aux_2;
    leakages <- LeakAddr([1]) :: leakages;
    (aux_2, aux_1) <- mulu_64 rax xa.[1];
    rdx <- aux_2;
    rax <- aux_1;
    leakages <- LeakAddr([]) :: leakages;
    aux_2 <- rax;
    leakages <- LeakAddr([1]) :: leakages;
    t.[1] <- aux_2;
    leakages <- LeakAddr([]) :: leakages;
    aux_2 <- rdx;
    t2s <- aux_2;
    leakages <- LeakAddr([2]) :: leakages;
    aux_2 <- xa.[2];
    rax <- aux_2;
    leakages <- LeakAddr([2]) :: leakages;
    (aux_2, aux_1) <- mulu_64 rax xa.[2];
    rdx <- aux_2;
    rax <- aux_1;
    leakages <- LeakAddr([]) :: leakages;
    aux_2 <- rax;
    leakages <- LeakAddr([3]) :: leakages;
    t.[3] <- aux_2;
    leakages <- LeakAddr([]) :: leakages;
    aux_2 <- rdx;
    leakages <- LeakAddr([4]) :: leakages;
    t.[4] <- aux_2;
    leakages <- LeakAddr([]) :: leakages;
    aux_2 <- t2s;
    leakages <- LeakAddr([2]) :: leakages;
    t.[2] <- aux_2;
    leakages <- LeakAddr([0; 1]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[1] t.[0] false;
    cf <- aux_3;
    leakages <- LeakAddr([1]) :: leakages;
    z.[1] <- aux_2;
    leakages <- LeakAddr([1; 2]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[2] t.[1] cf;
    cf <- aux_3;
    leakages <- LeakAddr([2]) :: leakages;
    z.[2] <- aux_2;
    leakages <- LeakAddr([2; 3]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[3] t.[2] cf;
    cf <- aux_3;
    leakages <- LeakAddr([3]) :: leakages;
    z.[3] <- aux_2;
    leakages <- LeakAddr([3; 4]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[4] t.[3] cf;
    cf <- aux_3;
    leakages <- LeakAddr([4]) :: leakages;
    z.[4] <- aux_2;
    leakages <- LeakAddr([4; 5]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[5] t.[4] cf;
    cf <- aux_3;
    leakages <- LeakAddr([5]) :: leakages;
    z.[5] <- aux_2;
    leakages <- LeakAddr([6]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[6] (W64.of_int 0) cf;
    cf <- aux_3;
    leakages <- LeakAddr([6]) :: leakages;
    z.[6] <- aux_2;
    leakages <- LeakAddr([7]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[7] (W64.of_int 0) cf;
     _3 <- aux_3;
    leakages <- LeakAddr([7]) :: leakages;
    z.[7] <- aux_2;
    leakages <- LeakAddr([3]) :: leakages;
    aux_2 <- xa.[3];
    rax <- aux_2;
    leakages <- LeakAddr([3]) :: leakages;
    (aux_2, aux_1) <- mulu_64 rax xa.[3];
    rdx <- aux_2;
    rax <- aux_1;
    leakages <- LeakAddr([6]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[6] rax false;
    cf <- aux_3;
    leakages <- LeakAddr([6]) :: leakages;
    z.[6] <- aux_2;
    leakages <- LeakAddr([7]) :: leakages;
    (aux_3, aux_2) <- adc_64 z.[7] rdx cf;
     _4 <- aux_3;
    leakages <- LeakAddr([7]) :: leakages;
    z.[7] <- aux_2;
    leakages <- LeakAddr([]) :: leakages;
    aux_4 <@ reduce (z);
    xa <- aux_4;
    leakages <- LeakAddr([]) :: leakages;
    (aux_3, aux_2) <- sbb_64 n (W64.of_int 1) false;
    cf <- aux_3;
    n <- aux_2;
    leakages <- LeakCond((! cf)) :: LeakAddr([]) :: leakages;
    
    while ((! cf)) {
      leakages <- LeakAddr([]) :: leakages;
      z <- witness;
      leakages <- LeakAddr([1]) :: leakages;
      aux_2 <- xa.[1];
      rax <- aux_2;
      leakages <- LeakAddr([0]) :: leakages;
      (aux_2, aux_1) <- mulu_64 rax xa.[0];
      rdx <- aux_2;
      rax <- aux_1;
      leakages <- LeakAddr([]) :: leakages;
      aux_2 <- rax;
      leakages <- LeakAddr([1]) :: leakages;
      z.[1] <- aux_2;
      leakages <- LeakAddr([]) :: leakages;
      aux_2 <- rdx;
      leakages <- LeakAddr([2]) :: leakages;
      z.[2] <- aux_2;
      leakages <- LeakAddr([2]) :: leakages;
      aux_2 <- xa.[2];
      rax <- aux_2;
      leakages <- LeakAddr([1]) :: leakages;
      (aux_2, aux_1) <- mulu_64 rax xa.[1];
      rdx <- aux_2;
      rax <- aux_1;
      leakages <- LeakAddr([]) :: leakages;
      aux_2 <- rax;
      leakages <- LeakAddr([3]) :: leakages;
      z.[3] <- aux_2;
      leakages <- LeakAddr([]) :: leakages;
      aux_2 <- rdx;
      leakages <- LeakAddr([4]) :: leakages;
      z.[4] <- aux_2;
      leakages <- LeakAddr([3]) :: leakages;
      aux_2 <- xa.[3];
      rax <- aux_2;
      leakages <- LeakAddr([2]) :: leakages;
      (aux_2, aux_1) <- mulu_64 rax xa.[2];
      rdx <- aux_2;
      rax <- aux_1;
      leakages <- LeakAddr([]) :: leakages;
      aux_2 <- rax;
      leakages <- LeakAddr([5]) :: leakages;
      z.[5] <- aux_2;
      leakages <- LeakAddr([]) :: leakages;
      aux_2 <- rdx;
      leakages <- LeakAddr([6]) :: leakages;
      z.[6] <- aux_2;
      leakages <- LeakAddr([]) :: leakages;
      aux_2 <- MOV_64 (W64.of_int 0);
      leakages <- LeakAddr([7]) :: leakages;
      z.[7] <- aux_2;
      leakages <- LeakAddr([2]) :: leakages;
      aux_2 <- xa.[2];
      rax <- aux_2;
      leakages <- LeakAddr([0]) :: leakages;
      (aux_2, aux_1) <- mulu_64 rax xa.[0];
      rdx <- aux_2;
      rax <- aux_1;
      leakages <- LeakAddr([2]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[2] rax false;
      cf <- aux_3;
      leakages <- LeakAddr([2]) :: leakages;
      z.[2] <- aux_2;
      leakages <- LeakAddr([3]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[3] rdx cf;
      cf <- aux_3;
      leakages <- LeakAddr([3]) :: leakages;
      z.[3] <- aux_2;
      leakages <- LeakAddr([4]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[4] (W64.of_int 0) cf;
       _0 <- aux_3;
      leakages <- LeakAddr([4]) :: leakages;
      z.[4] <- aux_2;
      leakages <- LeakAddr([3]) :: leakages;
      aux_2 <- xa.[3];
      rax <- aux_2;
      leakages <- LeakAddr([1]) :: leakages;
      (aux_2, aux_1) <- mulu_64 rax xa.[1];
      rdx <- aux_2;
      rax <- aux_1;
      leakages <- LeakAddr([4]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[4] rax false;
      cf <- aux_3;
      leakages <- LeakAddr([4]) :: leakages;
      z.[4] <- aux_2;
      leakages <- LeakAddr([5]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[5] rdx cf;
      cf <- aux_3;
      leakages <- LeakAddr([5]) :: leakages;
      z.[5] <- aux_2;
      leakages <- LeakAddr([6]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[6] (W64.of_int 0) cf;
      cf <- aux_3;
      leakages <- LeakAddr([6]) :: leakages;
      z.[6] <- aux_2;
      leakages <- LeakAddr([3]) :: leakages;
      aux_2 <- xa.[3];
      rax <- aux_2;
      leakages <- LeakAddr([0]) :: leakages;
      (aux_2, aux_1) <- mulu_64 rax xa.[0];
      rdx <- aux_2;
      rax <- aux_1;
      leakages <- LeakAddr([3]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[3] rax false;
      cf <- aux_3;
      leakages <- LeakAddr([3]) :: leakages;
      z.[3] <- aux_2;
      leakages <- LeakAddr([4]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[4] rdx cf;
      cf <- aux_3;
      leakages <- LeakAddr([4]) :: leakages;
      z.[4] <- aux_2;
      leakages <- LeakAddr([5]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[5] (W64.of_int 0) cf;
      cf <- aux_3;
      leakages <- LeakAddr([5]) :: leakages;
      z.[5] <- aux_2;
      leakages <- LeakAddr([6]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[6] (W64.of_int 0) cf;
      cf <- aux_3;
      leakages <- LeakAddr([6]) :: leakages;
      z.[6] <- aux_2;
      leakages <- LeakAddr([7]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[7] (W64.of_int 0) cf;
       _1 <- aux_3;
      leakages <- LeakAddr([7]) :: leakages;
      z.[7] <- aux_2;
      leakages <- LeakAddr([1; 1]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[1] z.[1] false;
      cf <- aux_3;
      leakages <- LeakAddr([1]) :: leakages;
      z.[1] <- aux_2;
      leakages <- LeakAddr([2; 2]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[2] z.[2] cf;
      cf <- aux_3;
      leakages <- LeakAddr([2]) :: leakages;
      z.[2] <- aux_2;
      leakages <- LeakAddr([3; 3]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[3] z.[3] cf;
      cf <- aux_3;
      leakages <- LeakAddr([3]) :: leakages;
      z.[3] <- aux_2;
      leakages <- LeakAddr([4; 4]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[4] z.[4] cf;
      cf <- aux_3;
      leakages <- LeakAddr([4]) :: leakages;
      z.[4] <- aux_2;
      leakages <- LeakAddr([5; 5]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[5] z.[5] cf;
      cf <- aux_3;
      leakages <- LeakAddr([5]) :: leakages;
      z.[5] <- aux_2;
      leakages <- LeakAddr([6; 6]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[6] z.[6] cf;
      cf <- aux_3;
      leakages <- LeakAddr([6]) :: leakages;
      z.[6] <- aux_2;
      leakages <- LeakAddr([7; 7]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[7] z.[7] cf;
       _2 <- aux_3;
      leakages <- LeakAddr([7]) :: leakages;
      z.[7] <- aux_2;
      leakages <- LeakAddr([0]) :: leakages;
      aux_2 <- xa.[0];
      rax <- aux_2;
      leakages <- LeakAddr([0]) :: leakages;
      (aux_2, aux_1) <- mulu_64 rax xa.[0];
      rdx <- aux_2;
      rax <- aux_1;
      leakages <- LeakAddr([]) :: leakages;
      aux_2 <- rax;
      leakages <- LeakAddr([0]) :: leakages;
      z.[0] <- aux_2;
      leakages <- LeakAddr([]) :: leakages;
      aux_2 <- rdx;
      leakages <- LeakAddr([0]) :: leakages;
      t.[0] <- aux_2;
      leakages <- LeakAddr([1]) :: leakages;
      aux_2 <- xa.[1];
      rax <- aux_2;
      leakages <- LeakAddr([1]) :: leakages;
      (aux_2, aux_1) <- mulu_64 rax xa.[1];
      rdx <- aux_2;
      rax <- aux_1;
      leakages <- LeakAddr([]) :: leakages;
      aux_2 <- rax;
      leakages <- LeakAddr([1]) :: leakages;
      t.[1] <- aux_2;
      leakages <- LeakAddr([]) :: leakages;
      aux_2 <- rdx;
      t2s <- aux_2;
      leakages <- LeakAddr([2]) :: leakages;
      aux_2 <- xa.[2];
      rax <- aux_2;
      leakages <- LeakAddr([2]) :: leakages;
      (aux_2, aux_1) <- mulu_64 rax xa.[2];
      rdx <- aux_2;
      rax <- aux_1;
      leakages <- LeakAddr([]) :: leakages;
      aux_2 <- rax;
      leakages <- LeakAddr([3]) :: leakages;
      t.[3] <- aux_2;
      leakages <- LeakAddr([]) :: leakages;
      aux_2 <- rdx;
      leakages <- LeakAddr([4]) :: leakages;
      t.[4] <- aux_2;
      leakages <- LeakAddr([]) :: leakages;
      aux_2 <- t2s;
      leakages <- LeakAddr([2]) :: leakages;
      t.[2] <- aux_2;
      leakages <- LeakAddr([0; 1]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[1] t.[0] false;
      cf <- aux_3;
      leakages <- LeakAddr([1]) :: leakages;
      z.[1] <- aux_2;
      leakages <- LeakAddr([1; 2]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[2] t.[1] cf;
      cf <- aux_3;
      leakages <- LeakAddr([2]) :: leakages;
      z.[2] <- aux_2;
      leakages <- LeakAddr([2; 3]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[3] t.[2] cf;
      cf <- aux_3;
      leakages <- LeakAddr([3]) :: leakages;
      z.[3] <- aux_2;
      leakages <- LeakAddr([3; 4]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[4] t.[3] cf;
      cf <- aux_3;
      leakages <- LeakAddr([4]) :: leakages;
      z.[4] <- aux_2;
      leakages <- LeakAddr([4; 5]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[5] t.[4] cf;
      cf <- aux_3;
      leakages <- LeakAddr([5]) :: leakages;
      z.[5] <- aux_2;
      leakages <- LeakAddr([6]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[6] (W64.of_int 0) cf;
      cf <- aux_3;
      leakages <- LeakAddr([6]) :: leakages;
      z.[6] <- aux_2;
      leakages <- LeakAddr([7]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[7] (W64.of_int 0) cf;
       _3 <- aux_3;
      leakages <- LeakAddr([7]) :: leakages;
      z.[7] <- aux_2;
      leakages <- LeakAddr([3]) :: leakages;
      aux_2 <- xa.[3];
      rax <- aux_2;
      leakages <- LeakAddr([3]) :: leakages;
      (aux_2, aux_1) <- mulu_64 rax xa.[3];
      rdx <- aux_2;
      rax <- aux_1;
      leakages <- LeakAddr([6]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[6] rax false;
      cf <- aux_3;
      leakages <- LeakAddr([6]) :: leakages;
      z.[6] <- aux_2;
      leakages <- LeakAddr([7]) :: leakages;
      (aux_3, aux_2) <- adc_64 z.[7] rdx cf;
       _4 <- aux_3;
      leakages <- LeakAddr([7]) :: leakages;
      z.[7] <- aux_2;
      leakages <- LeakAddr([]) :: leakages;
      aux_4 <@ reduce (z);
      xa <- aux_4;
      leakages <- LeakAddr([]) :: leakages;
      (aux_3, aux_2) <- sbb_64 n (W64.of_int 1) false;
      cf <- aux_3;
      n <- aux_2;
    leakages <- LeakCond((! cf)) :: LeakAddr([]) :: leakages;
    
    }
    return (xa);
  }
  
  proc iterated_square_export (xap:W64.t, n:W64.t) : unit = {
    var aux: W64.t;
    var aux_0: W64.t Array4.t;
    
    var xa:W64.t Array4.t;
    var ns:W64.t;
    xa <- witness;
    leakages <- LeakAddr([(W64.to_uint (xap + (W64.of_int 0)))]) :: leakages;
    aux <- (loadW64 Glob.mem (W64.to_uint (xap + (W64.of_int 0))));
    leakages <- LeakAddr([0]) :: leakages;
    xa.[0] <- aux;
    leakages <- LeakAddr([(W64.to_uint (xap + (W64.of_int 8)))]) :: leakages;
    aux <- (loadW64 Glob.mem (W64.to_uint (xap + (W64.of_int 8))));
    leakages <- LeakAddr([1]) :: leakages;
    xa.[1] <- aux;
    leakages <- LeakAddr([(W64.to_uint (xap + (W64.of_int 16)))]) :: leakages;
    aux <- (loadW64 Glob.mem (W64.to_uint (xap + (W64.of_int 16))));
    leakages <- LeakAddr([2]) :: leakages;
    xa.[2] <- aux;
    leakages <- LeakAddr([(W64.to_uint (xap + (W64.of_int 24)))]) :: leakages;
    aux <- (loadW64 Glob.mem (W64.to_uint (xap + (W64.of_int 24))));
    leakages <- LeakAddr([3]) :: leakages;
    xa.[3] <- aux;
    leakages <- LeakAddr([]) :: leakages;
    aux <- n;
    ns <- aux;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <@ iterated_square (xa, ns);
    xa <- aux_0;
    leakages <- LeakAddr([0]) :: leakages;
    aux <- xa.[0];
    leakages <- LeakAddr([(W64.to_uint (xap + (W64.of_int 0)))]) :: leakages;
    Glob.mem <- storeW64 Glob.mem (W64.to_uint (xap + (W64.of_int 0))) (aux);
    leakages <- LeakAddr([1]) :: leakages;
    aux <- xa.[1];
    leakages <- LeakAddr([(W64.to_uint (xap + (W64.of_int 8)))]) :: leakages;
    Glob.mem <- storeW64 Glob.mem (W64.to_uint (xap + (W64.of_int 8))) (aux);
    leakages <- LeakAddr([2]) :: leakages;
    aux <- xa.[2];
    leakages <- LeakAddr([(W64.to_uint (xap + (W64.of_int 16)))]) :: leakages;
    Glob.mem <- storeW64 Glob.mem (W64.to_uint (xap + (W64.of_int 16))) (aux);
    leakages <- LeakAddr([3]) :: leakages;
    aux <- xa.[3];
    leakages <- LeakAddr([(W64.to_uint (xap + (W64.of_int 24)))]) :: leakages;
    Glob.mem <- storeW64 Glob.mem (W64.to_uint (xap + (W64.of_int 24))) (aux);
    return ();
  }
}.

