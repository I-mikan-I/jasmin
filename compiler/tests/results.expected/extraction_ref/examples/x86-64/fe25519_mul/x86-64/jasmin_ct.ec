require import AllCore IntDiv CoreMap List Distr.
from Jasmin require import JModel_x86.
import SLH64.

from Jasmin require import JLeakage.



module M = {
  var leakages : leakages_t
  
  proc crypto_scalarmult_curve25519_amd64_64_fe25519_mul (rp:W64.t, xp:W64.t, ypp:W64.t) : unit = {
    var aux_1: bool;
    var aux_0: W64.t;
    var aux: W64.t;
    
    var yp:W64.t;
    var mulr4:W64.t;
    var mulr5:W64.t;
    var mulr6:W64.t;
    var mulr7:W64.t;
    var mulx0:W64.t;
    var mulrax:W64.t;
    var mulrdx:W64.t;
    var r0:W64.t;
    var r1:W64.t;
    var cf:bool;
    var r2:W64.t;
    var r3:W64.t;
    var mulx1:W64.t;
    var mulc:W64.t;
    var mulx2:W64.t;
    var mulx3:W64.t;
    var mulr8:W64.t;
    var mulzero:W64.t;
    var  _0:bool;
    var  _1:bool;
    var  _2:bool;
    var  _3:bool;
    var  _4:bool;
    var  _5:bool;
    var  _6:bool;
    var  _7:bool;
    var  _8:bool;
    var  _9:bool;
    var  _10:bool;
    var  _11:bool;
    var  _12:bool;
    var  _13:bool;
    var  _14:bool;
    var  _15:bool;
    var  _16:bool;
    var  _17:bool;
    var  _18:bool;
    var  _19:bool;
    var  _20:bool;
    var  _21:bool;
    var  _22:bool;
    var  _23:bool;
    var  _24:bool;
    var  _25:bool;
    var  _26:bool;
    var  _27:bool;
    var  _28:bool;
    
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- ypp;
    yp <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (W64.of_int 0);
    mulr4 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (W64.of_int 0);
    mulr5 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (W64.of_int 0);
    mulr6 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (W64.of_int 0);
    mulr7 <- aux_0;
    leakages <- LeakAddr([(W64.to_uint (xp + (W64.of_int (0 * 8))))]) :: leakages;
    aux_0 <- (loadW64 Glob.mem (W64.to_uint (xp + (W64.of_int (0 * 8)))));
    mulx0 <- aux_0;
    leakages <- LeakAddr([(W64.to_uint (yp + (W64.of_int (0 * 8))))]) :: leakages;
    aux_0 <- (loadW64 Glob.mem (W64.to_uint (yp + (W64.of_int (0 * 8)))));
    mulrax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 mulrax mulx0;
    mulrdx <- aux_0;
    mulrax <- aux;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- mulrax;
    r0 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- mulrdx;
    r1 <- aux_0;
    leakages <- LeakAddr([(W64.to_uint (yp + (W64.of_int (1 * 8))))]) :: leakages;
    aux_0 <- (loadW64 Glob.mem (W64.to_uint (yp + (W64.of_int (1 * 8)))));
    mulrax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 mulrax mulx0;
    mulrdx <- aux_0;
    mulrax <- aux;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r1 mulrax false;
    cf <- aux_1;
    r1 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (W64.of_int 0);
    r2 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r2 mulrdx cf;
     _0 <- aux_1;
    r2 <- aux_0;
    leakages <- LeakAddr([(W64.to_uint (yp + (W64.of_int (2 * 8))))]) :: leakages;
    aux_0 <- (loadW64 Glob.mem (W64.to_uint (yp + (W64.of_int (2 * 8)))));
    mulrax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 mulrax mulx0;
    mulrdx <- aux_0;
    mulrax <- aux;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r2 mulrax false;
    cf <- aux_1;
    r2 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (W64.of_int 0);
    r3 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r3 mulrdx cf;
     _1 <- aux_1;
    r3 <- aux_0;
    leakages <- LeakAddr([(W64.to_uint (yp + (W64.of_int (3 * 8))))]) :: leakages;
    aux_0 <- (loadW64 Glob.mem (W64.to_uint (yp + (W64.of_int (3 * 8)))));
    mulrax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 mulrax mulx0;
    mulrdx <- aux_0;
    mulrax <- aux;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r3 mulrax false;
    cf <- aux_1;
    r3 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr4 mulrdx cf;
     _2 <- aux_1;
    mulr4 <- aux_0;
    leakages <- LeakAddr([(W64.to_uint (xp + (W64.of_int (1 * 8))))]) :: leakages;
    aux_0 <- (loadW64 Glob.mem (W64.to_uint (xp + (W64.of_int (1 * 8)))));
    mulx1 <- aux_0;
    leakages <- LeakAddr([(W64.to_uint (yp + (W64.of_int (0 * 8))))]) :: leakages;
    aux_0 <- (loadW64 Glob.mem (W64.to_uint (yp + (W64.of_int (0 * 8)))));
    mulrax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 mulrax mulx1;
    mulrdx <- aux_0;
    mulrax <- aux;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r1 mulrax false;
    cf <- aux_1;
    r1 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (W64.of_int 0);
    mulc <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulc mulrdx cf;
     _3 <- aux_1;
    mulc <- aux_0;
    leakages <- LeakAddr([(W64.to_uint (yp + (W64.of_int (1 * 8))))]) :: leakages;
    aux_0 <- (loadW64 Glob.mem (W64.to_uint (yp + (W64.of_int (1 * 8)))));
    mulrax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 mulrax mulx1;
    mulrdx <- aux_0;
    mulrax <- aux;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r2 mulrax false;
    cf <- aux_1;
    r2 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulrdx (W64.of_int 0) cf;
     _4 <- aux_1;
    mulrdx <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r2 mulc false;
    cf <- aux_1;
    r2 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (W64.of_int 0);
    mulc <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulc mulrdx cf;
     _5 <- aux_1;
    mulc <- aux_0;
    leakages <- LeakAddr([(W64.to_uint (yp + (W64.of_int (2 * 8))))]) :: leakages;
    aux_0 <- (loadW64 Glob.mem (W64.to_uint (yp + (W64.of_int (2 * 8)))));
    mulrax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 mulrax mulx1;
    mulrdx <- aux_0;
    mulrax <- aux;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r3 mulrax false;
    cf <- aux_1;
    r3 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulrdx (W64.of_int 0) cf;
     _6 <- aux_1;
    mulrdx <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r3 mulc false;
    cf <- aux_1;
    r3 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (W64.of_int 0);
    mulc <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulc mulrdx cf;
     _7 <- aux_1;
    mulc <- aux_0;
    leakages <- LeakAddr([(W64.to_uint (yp + (W64.of_int (3 * 8))))]) :: leakages;
    aux_0 <- (loadW64 Glob.mem (W64.to_uint (yp + (W64.of_int (3 * 8)))));
    mulrax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 mulrax mulx1;
    mulrdx <- aux_0;
    mulrax <- aux;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr4 mulrax false;
    cf <- aux_1;
    mulr4 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulrdx (W64.of_int 0) cf;
     _8 <- aux_1;
    mulrdx <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr4 mulc false;
    cf <- aux_1;
    mulr4 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr5 mulrdx cf;
     _9 <- aux_1;
    mulr5 <- aux_0;
    leakages <- LeakAddr([(W64.to_uint (xp + (W64.of_int (2 * 8))))]) :: leakages;
    aux_0 <- (loadW64 Glob.mem (W64.to_uint (xp + (W64.of_int (2 * 8)))));
    mulx2 <- aux_0;
    leakages <- LeakAddr([(W64.to_uint (yp + (W64.of_int (0 * 8))))]) :: leakages;
    aux_0 <- (loadW64 Glob.mem (W64.to_uint (yp + (W64.of_int (0 * 8)))));
    mulrax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 mulrax mulx2;
    mulrdx <- aux_0;
    mulrax <- aux;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r2 mulrax false;
    cf <- aux_1;
    r2 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (W64.of_int 0);
    mulc <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulc mulrdx cf;
     _10 <- aux_1;
    mulc <- aux_0;
    leakages <- LeakAddr([(W64.to_uint (yp + (W64.of_int (1 * 8))))]) :: leakages;
    aux_0 <- (loadW64 Glob.mem (W64.to_uint (yp + (W64.of_int (1 * 8)))));
    mulrax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 mulrax mulx2;
    mulrdx <- aux_0;
    mulrax <- aux;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r3 mulrax false;
    cf <- aux_1;
    r3 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulrdx (W64.of_int 0) cf;
     _11 <- aux_1;
    mulrdx <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r3 mulc false;
    cf <- aux_1;
    r3 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (W64.of_int 0);
    mulc <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulc mulrdx cf;
     _12 <- aux_1;
    mulc <- aux_0;
    leakages <- LeakAddr([(W64.to_uint (yp + (W64.of_int (2 * 8))))]) :: leakages;
    aux_0 <- (loadW64 Glob.mem (W64.to_uint (yp + (W64.of_int (2 * 8)))));
    mulrax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 mulrax mulx2;
    mulrdx <- aux_0;
    mulrax <- aux;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr4 mulrax false;
    cf <- aux_1;
    mulr4 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulrdx (W64.of_int 0) cf;
     _13 <- aux_1;
    mulrdx <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr4 mulc false;
    cf <- aux_1;
    mulr4 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (W64.of_int 0);
    mulc <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulc mulrdx cf;
     _14 <- aux_1;
    mulc <- aux_0;
    leakages <- LeakAddr([(W64.to_uint (yp + (W64.of_int (3 * 8))))]) :: leakages;
    aux_0 <- (loadW64 Glob.mem (W64.to_uint (yp + (W64.of_int (3 * 8)))));
    mulrax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 mulrax mulx2;
    mulrdx <- aux_0;
    mulrax <- aux;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr5 mulrax false;
    cf <- aux_1;
    mulr5 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulrdx (W64.of_int 0) cf;
     _15 <- aux_1;
    mulrdx <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr5 mulc false;
    cf <- aux_1;
    mulr5 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr6 mulrdx cf;
     _16 <- aux_1;
    mulr6 <- aux_0;
    leakages <- LeakAddr([(W64.to_uint (xp + (W64.of_int (3 * 8))))]) :: leakages;
    aux_0 <- (loadW64 Glob.mem (W64.to_uint (xp + (W64.of_int (3 * 8)))));
    mulx3 <- aux_0;
    leakages <- LeakAddr([(W64.to_uint (yp + (W64.of_int (0 * 8))))]) :: leakages;
    aux_0 <- (loadW64 Glob.mem (W64.to_uint (yp + (W64.of_int (0 * 8)))));
    mulrax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 mulrax mulx3;
    mulrdx <- aux_0;
    mulrax <- aux;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r3 mulrax false;
    cf <- aux_1;
    r3 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (W64.of_int 0);
    mulc <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulc mulrdx cf;
     _17 <- aux_1;
    mulc <- aux_0;
    leakages <- LeakAddr([(W64.to_uint (yp + (W64.of_int (1 * 8))))]) :: leakages;
    aux_0 <- (loadW64 Glob.mem (W64.to_uint (yp + (W64.of_int (1 * 8)))));
    mulrax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 mulrax mulx3;
    mulrdx <- aux_0;
    mulrax <- aux;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr4 mulrax false;
    cf <- aux_1;
    mulr4 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulrdx (W64.of_int 0) cf;
     _18 <- aux_1;
    mulrdx <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr4 mulc false;
    cf <- aux_1;
    mulr4 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (W64.of_int 0);
    mulc <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulc mulrdx cf;
     _19 <- aux_1;
    mulc <- aux_0;
    leakages <- LeakAddr([(W64.to_uint (yp + (W64.of_int (2 * 8))))]) :: leakages;
    aux_0 <- (loadW64 Glob.mem (W64.to_uint (yp + (W64.of_int (2 * 8)))));
    mulrax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 mulrax mulx3;
    mulrdx <- aux_0;
    mulrax <- aux;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr5 mulrax false;
    cf <- aux_1;
    mulr5 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulrdx (W64.of_int 0) cf;
     _20 <- aux_1;
    mulrdx <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr5 mulc false;
    cf <- aux_1;
    mulr5 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (W64.of_int 0);
    mulc <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulc mulrdx cf;
     _21 <- aux_1;
    mulc <- aux_0;
    leakages <- LeakAddr([(W64.to_uint (yp + (W64.of_int (3 * 8))))]) :: leakages;
    aux_0 <- (loadW64 Glob.mem (W64.to_uint (yp + (W64.of_int (3 * 8)))));
    mulrax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 mulrax mulx3;
    mulrdx <- aux_0;
    mulrax <- aux;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr6 mulrax false;
    cf <- aux_1;
    mulr6 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulrdx (W64.of_int 0) cf;
     _22 <- aux_1;
    mulrdx <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr6 mulc false;
    cf <- aux_1;
    mulr6 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr7 mulrdx cf;
     _23 <- aux_1;
    mulr7 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- mulr4;
    mulrax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 mulrax (W64.of_int 38);
    mulrdx <- aux_0;
    mulrax <- aux;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- mulrax;
    mulr4 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- mulr5;
    mulrax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- mulrdx;
    mulr5 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 mulrax (W64.of_int 38);
    mulrdx <- aux_0;
    mulrax <- aux;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr5 mulrax false;
    cf <- aux_1;
    mulr5 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- mulr6;
    mulrax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (W64.of_int 0);
    mulr6 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr6 mulrdx cf;
     _24 <- aux_1;
    mulr6 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 mulrax (W64.of_int 38);
    mulrdx <- aux_0;
    mulrax <- aux;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr6 mulrax false;
    cf <- aux_1;
    mulr6 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- mulr7;
    mulrax <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (W64.of_int 0);
    mulr7 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr7 mulrdx cf;
     _25 <- aux_1;
    mulr7 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_0, aux) <- mulu_64 mulrax (W64.of_int 38);
    mulrdx <- aux_0;
    mulrax <- aux;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr7 mulrax false;
    cf <- aux_1;
    mulr7 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (W64.of_int 0);
    mulr8 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr8 mulrdx cf;
     _26 <- aux_1;
    mulr8 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r0 mulr4 false;
    cf <- aux_1;
    r0 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r1 mulr5 cf;
    cf <- aux_1;
    r1 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r2 mulr6 cf;
    cf <- aux_1;
    r2 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r3 mulr7 cf;
    cf <- aux_1;
    r3 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (W64.of_int 0);
    mulzero <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulr8 mulzero cf;
     _27 <- aux_1;
    mulr8 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (mulr8 * (W64.of_int 38));
    mulr8 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r0 mulr8 false;
    cf <- aux_1;
    r0 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r1 mulzero cf;
    cf <- aux_1;
    r1 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r2 mulzero cf;
    cf <- aux_1;
    r2 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 r3 mulzero cf;
    cf <- aux_1;
    r3 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    (aux_1, aux_0) <- adc_64 mulzero mulzero cf;
     _28 <- aux_1;
    mulzero <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (mulzero * (W64.of_int 38));
    mulzero <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- (r0 + mulzero);
    r0 <- aux_0;
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- r1;
    leakages <- LeakAddr([(W64.to_uint (rp + (W64.of_int (1 * 8))))]) :: leakages;
    Glob.mem <- storeW64 Glob.mem (W64.to_uint (rp + (W64.of_int (1 * 8)))) (aux_0);
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- r2;
    leakages <- LeakAddr([(W64.to_uint (rp + (W64.of_int (2 * 8))))]) :: leakages;
    Glob.mem <- storeW64 Glob.mem (W64.to_uint (rp + (W64.of_int (2 * 8)))) (aux_0);
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- r3;
    leakages <- LeakAddr([(W64.to_uint (rp + (W64.of_int (3 * 8))))]) :: leakages;
    Glob.mem <- storeW64 Glob.mem (W64.to_uint (rp + (W64.of_int (3 * 8)))) (aux_0);
    leakages <- LeakAddr([]) :: leakages;
    aux_0 <- r0;
    leakages <- LeakAddr([(W64.to_uint (rp + (W64.of_int (0 * 8))))]) :: leakages;
    Glob.mem <- storeW64 Glob.mem (W64.to_uint (rp + (W64.of_int (0 * 8)))) (aux_0);
    return ();
  }
}.

